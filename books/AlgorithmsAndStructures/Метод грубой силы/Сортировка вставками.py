'''
Сначала сканируется весь массив
и на место первого элемента ставится минимальный
Далее сканируется список, начиная со второго элемента,
в поисках наименьшего среди оставшихся n-1 элементов

В общем случае:
при i-м проходе (i=[from 0 to n-2])
алгоритм ищет наименьший элемент среди n-i элементов
и обменивает найденный элемент с A[i]
'''

def insert_sort(A):
    n = len(A)
    for i in range(0, n):
        minElem_index = i
        for j in range(i+1, n):
            if A[j] < A[minElem_index]:
                minElem_index = j
        A[i], A[minElem_index] = A[minElem_index], A[i]

example = [89, 45, 68, 90, 29, 34, 17]
insert_sort(example)
print(example)


# Количество входных данных определяется размером списка
# Базовой операцией алгоритма является сравнений значений списка
# Трудоемкость алгоритма зависит только от количественной составляющей
# (поскольку количество сравнений
# всегда фиксированное для любого массива фиксированной длины)

# T(n) = teta(n^2) - время работы алгоритма сортировки вставками